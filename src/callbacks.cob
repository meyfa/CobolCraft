*> --- Callbacks-Init ---
IDENTIFICATION DIVISION.
PROGRAM-ID. Callbacks-Init.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.

PROCEDURE DIVISION.
    INITIALIZE ITEM-CALLBACKS
    INITIALIZE BLOCK-CALLBACKS
    INITIALIZE WINDOW-CALLBACKS
    GOBACK.

END PROGRAM Callbacks-Init.

*> --- SetCallback-ItemUse ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-ItemUse.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 C-MINECRAFT-ITEM             PIC X(16) VALUE "minecraft:item".
    01 PROTOCOL-ID                  BINARY-LONG.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-ITEM-NAME                 PIC X ANY LENGTH.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-ITEM-NAME LK-CB-PTR.
    CALL "Registries-Get-EntryId" USING C-MINECRAFT-ITEM LK-ITEM-NAME PROTOCOL-ID
    MOVE LK-CB-PTR TO CB-PTR-USE(PROTOCOL-ID + 1)
    GOBACK.

END PROGRAM SetCallback-ItemUse.

*> --- GetCallback-ItemUse ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-ItemUse.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 C-MINECRAFT-ITEM             PIC X(16) VALUE "minecraft:item".
    01 PROTOCOL-ID                  BINARY-LONG.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-ITEM-NAME                 PIC X ANY LENGTH.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-ITEM-NAME LK-CB-PTR.
    CALL "Registries-Get-EntryId" USING C-MINECRAFT-ITEM LK-ITEM-NAME PROTOCOL-ID
    MOVE CB-PTR-USE(PROTOCOL-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-ItemUse.

*> --- SetCallback-BlockDestroy ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-BlockDestroy.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    MOVE LK-CB-PTR TO CB-PTR-DESTROY(LK-BLOCK-STATE-ID + 1)
    GOBACK.

END PROGRAM SetCallback-BlockDestroy.

*> --- GetCallback-BlockDestroy ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-BlockDestroy.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    IF LK-BLOCK-STATE-ID < 0
        SET LK-CB-PTR TO NULL
        GOBACK
    END-IF
    MOVE CB-PTR-DESTROY(LK-BLOCK-STATE-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-BlockDestroy.

*> --- SetCallback-BlockInteract ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-BlockInteract.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    MOVE LK-CB-PTR TO CB-PTR-INTERACT(LK-BLOCK-STATE-ID + 1)
    GOBACK.

END PROGRAM SetCallback-BlockInteract.

*> --- GetCallback-BlockInteract ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-BlockInteract.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    IF LK-BLOCK-STATE-ID < 0
        SET LK-CB-PTR TO NULL
        GOBACK
    END-IF
    MOVE CB-PTR-INTERACT(LK-BLOCK-STATE-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-BlockInteract.

*> --- SetCallback-BlockFace ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-BlockFace.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    MOVE LK-CB-PTR TO CB-PTR-FACE(LK-BLOCK-STATE-ID + 1)
    GOBACK.

END PROGRAM SetCallback-BlockFace.

*> --- GetCallback-BlockFace ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-BlockFace.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    IF LK-BLOCK-STATE-ID < 0
        SET LK-CB-PTR TO NULL
        GOBACK
    END-IF
    MOVE CB-PTR-FACE(LK-BLOCK-STATE-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-BlockFace.

*> --- SetCallback-BlockReplaceable ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-BlockReplaceable.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    MOVE LK-CB-PTR TO CB-PTR-REPLACEABLE(LK-BLOCK-STATE-ID + 1)
    GOBACK.

END PROGRAM SetCallback-BlockReplaceable.

*> --- GetCallback-BlockReplaceable ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-BlockReplaceable.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    IF LK-BLOCK-STATE-ID < 0
        SET LK-CB-PTR TO NULL
        GOBACK
    END-IF
    MOVE CB-PTR-REPLACEABLE(LK-BLOCK-STATE-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-BlockReplaceable.

*> --- SetCallback-BlockItem ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-BlockItem.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    MOVE LK-CB-PTR TO CB-PTR-BLOCK-ITEM(LK-BLOCK-STATE-ID + 1)
    GOBACK.

END PROGRAM SetCallback-BlockItem.

*> --- GetCallback-BlockItem ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-BlockItem.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-BLOCK-STATE-ID            BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-BLOCK-STATE-ID LK-CB-PTR.
    IF LK-BLOCK-STATE-ID < 0
        SET LK-CB-PTR TO NULL
        GOBACK
    END-IF
    MOVE CB-PTR-BLOCK-ITEM(LK-BLOCK-STATE-ID + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-BlockItem.

*> --- SetCallback-WindowSync ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-WindowSync.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE LK-CB-PTR TO CB-PTR-SYNC-PLAYER
        GOBACK
    END-IF
    MOVE LK-CB-PTR TO CB-PTR-SYNC(LK-WINDOW-TYPE + 1)
    GOBACK.

END PROGRAM SetCallback-WindowSync.

*> --- GetCallback-WindowSync ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-WindowSync.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE CB-PTR-SYNC-PLAYER TO LK-CB-PTR
        GOBACK
    END-IF
    MOVE CB-PTR-SYNC(LK-WINDOW-TYPE + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-WindowSync.

*> --- SetCallback-WindowClose ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-WindowClose.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE LK-CB-PTR TO CB-PTR-CLOSE-PLAYER
        GOBACK
    END-IF
    MOVE LK-CB-PTR TO CB-PTR-CLOSE(LK-WINDOW-TYPE + 1)
    GOBACK.

END PROGRAM SetCallback-WindowClose.

*> --- GetCallback-WindowClose ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-WindowClose.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE CB-PTR-CLOSE-PLAYER TO LK-CB-PTR
        GOBACK
    END-IF
    MOVE CB-PTR-CLOSE(LK-WINDOW-TYPE + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-WindowClose.

*> --- SetCallback-WindowSetSlot ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SetCallback-WindowSetSlot.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE LK-CB-PTR TO CB-PTR-SET-SLOT-PLAYER
        GOBACK
    END-IF
    MOVE LK-CB-PTR TO CB-PTR-SET-SLOT(LK-WINDOW-TYPE + 1)
    GOBACK.

END PROGRAM SetCallback-WindowSetSlot.

*> --- GetCallback-WindowSetSlot ---
IDENTIFICATION DIVISION.
PROGRAM-ID. GetCallback-WindowSetSlot.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CALLBACKS.
LINKAGE SECTION.
    01 LK-WINDOW-TYPE               BINARY-LONG.
    01 LK-CB-PTR                    PROGRAM-POINTER.

PROCEDURE DIVISION USING LK-WINDOW-TYPE LK-CB-PTR.
    IF LK-WINDOW-TYPE < 0
        MOVE CB-PTR-SET-SLOT-PLAYER TO LK-CB-PTR
        GOBACK
    END-IF
    MOVE CB-PTR-SET-SLOT(LK-WINDOW-TYPE + 1) TO LK-CB-PTR
    GOBACK.

END PROGRAM GetCallback-WindowSetSlot.
