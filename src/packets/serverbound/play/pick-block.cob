IDENTIFICATION DIVISION.
PROGRAM-ID. RecvPacket-PickBlock.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CLIENTS.
    COPY DD-PLAYERS.
    01 PLAYER-ID                BINARY-LONG.
    *> payload
    01 LOCATION.
        02 LOCATION-X           BINARY-LONG.
        02 LOCATION-Y           BINARY-LONG.
        02 LOCATION-Z           BINARY-LONG.
    *> variables
    01 BOUNDS-CHECK             BINARY-CHAR UNSIGNED.
    01 BLOCK-STATE-ID           BINARY-LONG.
    01 BLOCK-ITEM-CALLBACK      PROGRAM-POINTER.
    01 IDENTIFIER               PIC X(255).
    01 ITEM-ID                  BINARY-LONG.
LINKAGE SECTION.
    01 LK-CLIENT                BINARY-LONG UNSIGNED.
    01 LK-BUFFER                PIC X ANY LENGTH.
    01 LK-OFFSET                BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-CLIENT LK-BUFFER LK-OFFSET.
    MOVE CLIENT-PLAYER(LK-CLIENT) TO PLAYER-ID

    CALL "Decode-Position" USING LK-BUFFER LK-OFFSET LOCATION
    *> TODO: "include data" flag
    ADD 1 TO LK-OFFSET

    CALL "World-CheckBounds" USING LOCATION BOUNDS-CHECK
    IF BOUNDS-CHECK NOT = 0
        GOBACK
    END-IF

    *> Find the block's item handler
    CALL "World-GetBlock" USING LOCATION BLOCK-STATE-ID
    CALL "GetCallback-BlockItem" USING BLOCK-STATE-ID BLOCK-ITEM-CALLBACK
    IF BLOCK-ITEM-CALLBACK = NULL
        GOBACK
    END-IF

    CALL BLOCK-ITEM-CALLBACK USING BLOCK-STATE-ID IDENTIFIER
    IF IDENTIFIER = SPACES
        GOBACK
    END-IF

    CALL "Registries-Get-EntryId" USING "minecraft:item" IDENTIFIER ITEM-ID
    IF ITEM-ID > 0
        CALL "Inventory-PickItem" USING PLAYER-ID ITEM-ID
    END-IF

    GOBACK.

END PROGRAM RecvPacket-PickBlock.
