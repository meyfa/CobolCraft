*> --- DecodeHexChar ---
*> Decode a single hex character to a byte value.
IDENTIFICATION DIVISION.
PROGRAM-ID. DecodeHexChar.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 NIBBLE-VALUE     BINARY-CHAR UNSIGNED.
LINKAGE SECTION.
    01 LK-HEX-CHAR-IN   PIC X.
    01 LK-BYTE-OUT      BINARY-CHAR UNSIGNED.

PROCEDURE DIVISION USING BY REFERENCE LK-HEX-CHAR-IN LK-BYTE-OUT.
    COMPUTE NIBBLE-VALUE = FUNCTION ORD(LK-HEX-CHAR-IN(1:1)) - 1
    EVALUATE NIBBLE-VALUE
        WHEN >= 97  *> "a"
            SUBTRACT 87 FROM NIBBLE-VALUE
        WHEN >= 65  *> "A"
            SUBTRACT 55 FROM NIBBLE-VALUE
        WHEN OTHER  *> "0"
            SUBTRACT 48 FROM NIBBLE-VALUE
    END-EVALUATE
    MOVE NIBBLE-VALUE TO LK-BYTE-OUT
    GOBACK.

END PROGRAM DecodeHexChar.

*> --- DecodeHexString ---
*> Decode a hex string to a buffer. Spaces between pairs of hex characters are ignored.
IDENTIFICATION DIVISION.
PROGRAM-ID. DecodeHexString.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 INPUT-INDEX          INDEX                   VALUE 1.
    01 CURRENT-CHAR         PIC X.
    01 NIBBLE-VALUE         BINARY-CHAR UNSIGNED.
    01 BYTE-VALUE           BINARY-CHAR UNSIGNED.
LINKAGE SECTION.
    01 LK-HEX-STRING-IN     PIC X(64000).
    01 LK-HEX-STRING-LEN    BINARY-LONG UNSIGNED.
    01 LK-BUFFER-OUT        PIC X(64000).
    01 LK-BYTES-WRITTEN     BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING BY REFERENCE LK-HEX-STRING-IN LK-HEX-STRING-LEN LK-BUFFER-OUT LK-BYTES-WRITTEN.
    MOVE 0 TO LK-BYTES-WRITTEN
    PERFORM UNTIL INPUT-INDEX > LK-HEX-STRING-LEN
        *> Skip spaces
        IF LK-HEX-STRING-IN(INPUT-INDEX:1) = " "
            ADD 1 TO INPUT-INDEX
        ELSE
            *> Convert the current character to the upper part of the byte
            MOVE LK-HEX-STRING-IN(INPUT-INDEX:1) TO CURRENT-CHAR
            CALL "DecodeHexChar" USING CURRENT-CHAR NIBBLE-VALUE
            COMPUTE BYTE-VALUE = NIBBLE-VALUE * 16
            *> Convert the next character to the lower part of the byte
            ADD 1 TO INPUT-INDEX
            MOVE LK-HEX-STRING-IN(INPUT-INDEX:1) TO CURRENT-CHAR
            CALL "DecodeHexChar" USING CURRENT-CHAR NIBBLE-VALUE
            ADD NIBBLE-VALUE TO BYTE-VALUE
            *> Write the byte to the output buffer
            ADD 1 TO LK-BYTES-WRITTEN
            MOVE FUNCTION CHAR(BYTE-VALUE + 1) TO LK-BUFFER-OUT(LK-BYTES-WRITTEN:1)
            ADD 1 TO INPUT-INDEX
        END-IF
    END-PERFORM
    GOBACK.

END PROGRAM DecodeHexString.

*> --- EncodeHexChar ---
*> Encode a nibble to a hex character.
IDENTIFICATION DIVISION.
PROGRAM-ID. EncodeHexChar.

DATA DIVISION.
LINKAGE SECTION.
    01 LK-NIBBLE-IN     BINARY-CHAR UNSIGNED.
    01 LK-HEX-CHAR-OUT  PIC X.

PROCEDURE DIVISION USING BY REFERENCE LK-NIBBLE-IN LK-HEX-CHAR-OUT.
    EVALUATE LK-NIBBLE-IN
        WHEN < 10
            *> 48 is the ASCII value of "0"
            MOVE FUNCTION CHAR(LK-NIBBLE-IN + 48 + 1) TO LK-HEX-CHAR-OUT
        WHEN OTHER
            *> 97 is the ASCII value of "a", but subtract 10 due to the hex meaning
            MOVE FUNCTION CHAR(LK-NIBBLE-IN + 87 + 1) TO LK-HEX-CHAR-OUT
    END-EVALUATE
    GOBACK.

END PROGRAM EncodeHexChar.

*> --- EncodeHexString ---
*> Encode a buffer to a hex string.
IDENTIFICATION DIVISION.
PROGRAM-ID. EncodeHexString.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 BYTE-INDEX           INDEX                   VALUE 1.
    01 STRING-INDEX         INDEX                   VALUE 1.
    01 BYTE-VALUE           BINARY-CHAR UNSIGNED.
    01 NIBBLE-VALUE         BINARY-CHAR UNSIGNED.
    01 CURRENT-CHAR         PIC X.
LINKAGE SECTION.
    01 LK-BUFFER-IN         PIC X(64000).
    01 LK-BUFFER-LEN        BINARY-LONG UNSIGNED.
    01 LK-HEX-STRING-OUT    PIC X(64000).

PROCEDURE DIVISION USING BY REFERENCE LK-BUFFER-IN LK-BUFFER-LEN LK-HEX-STRING-OUT.
    PERFORM VARYING BYTE-INDEX FROM 1 BY 1 UNTIL BYTE-INDEX > LK-BUFFER-LEN
        COMPUTE BYTE-VALUE = FUNCTION ORD(LK-BUFFER-IN(BYTE-INDEX:1)) - 1
        DIVIDE BYTE-VALUE BY 16 GIVING NIBBLE-VALUE REMAINDER BYTE-VALUE
        CALL "EncodeHexChar" USING NIBBLE-VALUE CURRENT-CHAR
        MOVE CURRENT-CHAR TO LK-HEX-STRING-OUT(STRING-INDEX:1)
        ADD 1 TO STRING-INDEX
        CALL "EncodeHexChar" USING BYTE-VALUE CURRENT-CHAR
        MOVE CURRENT-CHAR TO LK-HEX-STRING-OUT(STRING-INDEX:1)
        ADD 1 TO STRING-INDEX
    END-PERFORM
    GOBACK.

END PROGRAM EncodeHexString.
