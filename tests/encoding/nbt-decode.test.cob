*> --- Test: nbt-decode.cob ---
IDENTIFICATION DIVISION.
PROGRAM-ID. Test-NbtDecode.

PROCEDURE DIVISION.
    COPY TEST-SUITE REPLACING ==NAME== BY =="encoding/nbt-decode.cob"==.
    CALL "Test-NbtDecode-Byte"
    CALL "Test-NbtDecode-Int"
    CALL "Test-NbtDecode-Short"
    CALL "Test-NbtDecode-Long"
    CALL "Test-NbtDecode-Float"
    CALL "Test-NbtDecode-Double"
    CALL "Test-NbtDecode-String"
    CALL "Test-NbtDecode-List"
    CALL "Test-NbtDecode-Compound"
    CALL "Test-NbtDecode-RootCompound"
    CALL "Test-NbtDecode-EndCompound"
    CALL "Test-NbtDecode-Peek"
    CALL "Test-NbtDecode-Skip"
    CALL "Test-NbtDecode-UUID"
    GOBACK.

    *> --- Test: Test-NbtDecode-Byte ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Byte.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       BINARY-CHAR.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Byte"==.
    TagByte.
        COPY TEST-CASE REPLACING ==NAME== BY =="from byte tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000012AFFFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Byte" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 5 AND RESULT = 42==.
    TagShort.
        COPY TEST-CASE REPLACING ==NAME== BY =="from short tag"==.
        INITIALIZE NBTDEC
        MOVE X"000002002AFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Byte" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND RESULT = 42==.
    TagInt.
        COPY TEST-CASE REPLACING ==NAME== BY =="from int tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000030000002AFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Byte" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = 42==.
    TagLong.
        COPY TEST-CASE REPLACING ==NAME== BY =="from long tag"==.
        INITIALIZE NBTDEC
        MOVE X"000004000000000000002AFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Byte" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = 42==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Byte.

    *> --- Test: Test-NbtDecode-Short ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Short.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       BINARY-SHORT.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Short"==.
    TagByte.
        COPY TEST-CASE REPLACING ==NAME== BY =="from byte tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000012AFFFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Short" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 5 AND RESULT = 42==.
    TagShort.
        COPY TEST-CASE REPLACING ==NAME== BY =="from short tag"==.
        INITIALIZE NBTDEC
        MOVE X"000002002AFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Short" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND RESULT = 42==.
    TagInt.
        COPY TEST-CASE REPLACING ==NAME== BY =="from int tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000030000002AFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Short" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = 42==.
    TagLong.
        COPY TEST-CASE REPLACING ==NAME== BY =="from long tag"==.
        INITIALIZE NBTDEC
        MOVE X"000004000000000000002AFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Short" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = 42==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Short.

    *> --- Test: Test-NbtDecode-Int ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Int.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       BINARY-LONG.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Int"==.
    TagByte.
        COPY TEST-CASE REPLACING ==NAME== BY =="from byte tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000012AFFFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Int" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 5 AND RESULT = 42==.
    TagShort.
        COPY TEST-CASE REPLACING ==NAME== BY =="from short tag"==.
        INITIALIZE NBTDEC
        MOVE X"000002002AFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Int" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND RESULT = 42==.
    TagInt.
        COPY TEST-CASE REPLACING ==NAME== BY =="from int tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000030000002AFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Int" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = 42==.
    TagLong.
        COPY TEST-CASE REPLACING ==NAME== BY =="from long tag"==.
        INITIALIZE NBTDEC
        MOVE X"000004000000000000002AFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Int" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = 42==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Int.

    *> --- Test: Test-NbtDecode-Long ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Long.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       BINARY-LONG-LONG.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Long"==.
    BasicLong.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, long tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000040000000000000102FFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Long" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = H'0102'==.
    TagByte.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, byte tag"==.
        INITIALIZE NBTDEC
        MOVE X"00000142FFFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Long" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 5 AND RESULT = H'42'==.
    TagShort.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, short tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000021234FFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Long" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND RESULT = H'1234'==.
    TagInt.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, int tag"==.
        INITIALIZE NBTDEC
        MOVE X"00000301020304FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Long" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = H'01020304'==.
    WithinCompound.
        COPY TEST-CASE REPLACING ==NAME== BY =="within compound, empty name"==.
        INITIALIZE NBTDEC
        MOVE X"0A040000000000000000020300FFFFFF" TO BUFFER
        MOVE 1 TO NBTDEC-OFFSET
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        CALL "NbtDecode-Long" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 13 AND RESULT = H'0203'==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Long.

    *> --- Test: Test-NbtDecode-Float ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Float.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       FLOAT-SHORT.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Float"==.
    FromFloat.
        COPY TEST-CASE REPLACING ==NAME== BY =="from float tag"==.
        INITIALIZE NBTDEC
        MOVE X"00000541420000FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Float" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = 12.125==.
    FromDouble.
        COPY TEST-CASE REPLACING ==NAME== BY =="from double tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000064028400000000000FFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Float" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = 12.125==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Float.

    *> --- Test: Test-NbtDecode-Double ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Double.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 RESULT       FLOAT-LONG.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Double"==.
    FromFloat.
        COPY TEST-CASE REPLACING ==NAME== BY =="from float tag"==.
        INITIALIZE NBTDEC
        MOVE X"00000541420000FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Double" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND RESULT = 12.125==.
    FromDouble.
        COPY TEST-CASE REPLACING ==NAME== BY =="from double tag"==.
        INITIALIZE NBTDEC
        MOVE X"0000064028400000000000FFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Double" USING NBTDEC BUFFER RESULT
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 12 AND RESULT = 12.125==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Double.

    *> --- Test: Test-NbtDecode-String ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-String.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 STR          PIC X(12).
        01 STR-LEN      BINARY-LONG UNSIGNED.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-String"==.
    EmptyString.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty string"==.
        INITIALIZE NBTDEC
        MOVE X"0000080000FFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-String" USING NBTDEC BUFFER STR STR-LEN
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND STR-LEN = 0==.
    NonEmptyString.
        COPY TEST-CASE REPLACING ==NAME== BY =="non-empty string"==.
        INITIALIZE NBTDEC
        MOVE X"000008000454657374FFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-String" USING NBTDEC BUFFER STR STR-LEN
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 10 AND STR-LEN = 4 AND STR = "Test"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-String.

    *> --- Test: Test-NbtDecode-List ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-List.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 LIST-LENGTH  BINARY-LONG UNSIGNED.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-List"==.
    EmptyList.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty list (type=end)"==.
        INITIALIZE NBTDEC
        MOVE X"0000090000000000FFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 9 AND LIST-LENGTH = 0 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"09" AND NBTDEC-STACK-LIST-TYPE(1) = X"00"==.
    EmptyByteArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty byte array"==.
        INITIALIZE NBTDEC
        MOVE X"00000700000000FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 0 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"07" AND NBTDEC-STACK-LIST-TYPE(1) = X"01"==.
    EmptyIntArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty int array"==.
        INITIALIZE NBTDEC
        MOVE X"00000B00000000FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 0 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0B" AND NBTDEC-STACK-LIST-TYPE(1) = X"03"==.
    EmptyLongArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty long array"==.
        INITIALIZE NBTDEC
        MOVE X"00000C00000000FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 0 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0C" AND NBTDEC-STACK-LIST-TYPE(1) = X"04"==.
    NonEmptyList.
        COPY TEST-CASE REPLACING ==NAME== BY =="non-empty list"==.
        INITIALIZE NBTDEC
        MOVE X"000009020000000200010002FFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 9 AND LIST-LENGTH = 2 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"09" AND NBTDEC-STACK-LIST-TYPE(1) = X"02"==.
    NonEmptyByteArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="non-empty byte array"==.
        INITIALIZE NBTDEC
        MOVE X"00000700000003010203FFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 3 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"07" AND NBTDEC-STACK-LIST-TYPE(1) = X"01"==.
    NonEmptyIntArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="non-empty int array"==.
        INITIALIZE NBTDEC
        MOVE X"00000B000000020000000100000002FF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 2 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0B" AND NBTDEC-STACK-LIST-TYPE(1) = X"03"==.
    NonEmptyLongArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="non-empty long array"==.
        INITIALIZE NBTDEC
        MOVE X"00000C000000010000000000000001FF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND LIST-LENGTH = 1 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0C" AND NBTDEC-STACK-LIST-TYPE(1) = X"04"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-List.

    *> --- Test: Test-NbtDecode-Compound ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Compound.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(12).

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Compound"==.
    Basic.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level"==.
        INITIALIZE NBTDEC
        MOVE X"00000A000400FFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 4 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0A"==.
    NestedCompound.
        COPY TEST-CASE REPLACING ==NAME== BY =="nested compound"==.
        INITIALIZE NBTDEC
        MOVE X"00000A0A000444617461FFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 11 AND NBTDEC-LEVEL = 2 AND NBTDEC-STACK-TYPE(2) = X"0A"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Compound.

    *> --- Test: Test-NbtDecode-RootCompound ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-RootCompound.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(12).

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-RootCompound"==.
    Basic.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, empty name"==.
        INITIALIZE NBTDEC
        MOVE X"00000A000000FFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-RootCompound" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 6 AND NBTDEC-LEVEL = 1 AND NBTDEC-STACK-TYPE(1) = X"0A"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-RootCompound.

    *> --- Test: Test-NbtDecode-EndCompound ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-EndCompound.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(12).

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-EndCompound"==.
    Basic.
        COPY TEST-CASE REPLACING ==NAME== BY =="basic"==.
        INITIALIZE NBTDEC
        MOVE X"00000A0A000000FFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        CALL "NbtDecode-EndCompound" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8 AND NBTDEC-LEVEL = 1==.

        GOBACK.

    END PROGRAM Test-NbtDecode-EndCompound.

    *> --- Test: Test-NbtDecode-Peek ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Peek.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(12).
        01 AT-END       BINARY-CHAR UNSIGNED.
        01 NAME-VALUE   PIC X(12).

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Peek"==.
    AtEnd.
        COPY TEST-CASE REPLACING ==NAME== BY =="at end"==.
        INITIALIZE NBTDEC
        MOVE X"0A010004446174614200FFFF" TO BUFFER
        MOVE 10 TO NBTDEC-OFFSET
        MOVE 0 TO AT-END
        CALL "NbtDecode-Peek" USING NBTDEC BUFFER AT-END NAME-VALUE
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 10 AND AT-END = 1==.
    NotAtEnd.
        COPY TEST-CASE REPLACING ==NAME== BY =="not at end"==.
        INITIALIZE NBTDEC
        MOVE X"0A010004446174614200FFFF" TO BUFFER
        MOVE 2 TO NBTDEC-OFFSET
        MOVE 1 TO AT-END
        MOVE "failure" TO NAME-VALUE
        CALL "NbtDecode-Peek" USING NBTDEC BUFFER AT-END NAME-VALUE
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 2 AND AT-END = 0 AND NAME-VALUE = "Data"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Peek.

    *> --- Test: Test-NbtDecode-Skip ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-Skip.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(16).
        01 LIST-LENGTH  BINARY-LONG UNSIGNED.

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="NbtDecode-Skip"==.
    Basic.
        COPY TEST-CASE REPLACING ==NAME== BY =="root level, int tag"==.
        INITIALIZE NBTDEC
        MOVE X"00000311223344FFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 8==.
    WithinCompound.
        COPY TEST-CASE REPLACING ==NAME== BY =="within compound, named long tag"==.
        INITIALIZE NBTDEC
        MOVE X"0A04000454696D650102030405060708" TO BUFFER
        MOVE 1 TO NBTDEC-OFFSET
        CALL "NbtDecode-Compound" USING NBTDEC BUFFER
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 17==.
    ByteArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="byte array"==.
        INITIALIZE NBTDEC
        MOVE X"00000700000003010203FFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 11==.
    IntArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="int array"==.
        INITIALIZE NBTDEC
        MOVE X"00000B000000020000000800000009FF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 16==.
    LongArray.
        COPY TEST-CASE REPLACING ==NAME== BY =="long array"==.
        INITIALIZE NBTDEC
        MOVE X"00000C000000010000000000000042FF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 16==.
    StringTag.
        COPY TEST-CASE REPLACING ==NAME== BY =="string tag"==.
        INITIALIZE NBTDEC
        MOVE X"000008000454657374FFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 10==.
    List.
        COPY TEST-CASE REPLACING ==NAME== BY =="list (short)"==.
        INITIALIZE NBTDEC
        MOVE X"000009020000000200010002FFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 13 AND NBTDEC-LEVEL = 0==.
    EmptyList.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty list"==.
        INITIALIZE NBTDEC
        MOVE X"0000090000000000FFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 9 AND NBTDEC-LEVEL = 0==.
    NegativeLengthList.
        COPY TEST-CASE REPLACING ==NAME== BY =="negative length list (int)"==.
        INITIALIZE NBTDEC
        MOVE X"00000903FFFFFFF1FFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 9 AND NBTDEC-LEVEL = 0==.
    EmptyCompound.
        COPY TEST-CASE REPLACING ==NAME== BY =="empty compound"==.
        INITIALIZE NBTDEC
        MOVE X"00000A00FFFFFFFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 5 AND NBTDEC-LEVEL = 0==.
    NestedCompound.
        COPY TEST-CASE REPLACING ==NAME== BY =="nested compound"==.
        INITIALIZE NBTDEC
        MOVE X"00000A0A0001440A000157000000FFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 15 AND NBTDEC-LEVEL = 0==.
    WithinList.
        COPY TEST-CASE REPLACING ==NAME== BY =="within list"==.
        INITIALIZE NBTDEC
        MOVE X"000009020000000200010002FFFFFFFF" TO BUFFER
        MOVE 3 TO NBTDEC-OFFSET
        CALL "NbtDecode-List" USING NBTDEC BUFFER LIST-LENGTH
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 11 AND NBTDEC-LEVEL = 1==.
    WithinList2.
        COPY TEST-CASE REPLACING ==NAME== BY =="within list (2)"==.
        CALL "NbtDecode-Skip" USING NBTDEC BUFFER
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 13 AND NBTDEC-LEVEL = 1==.

        GOBACK.

    END PROGRAM Test-NbtDecode-Skip.

    *> --- Test: NbtDecode-UUID ---
    IDENTIFICATION DIVISION.
    PROGRAM-ID. Test-NbtDecode-UUID.

    DATA DIVISION.
    WORKING-STORAGE SECTION.
        COPY DD-NBT-DECODER.
        01 BUFFER       PIC X(32).
        01 UUID         PIC X(16).

    PROCEDURE DIVISION.
        COPY TEST-UNIT REPLACING ==NAME== BY =="Test-NbtDecode-UUID"==.
    Basic.
        COPY TEST-CASE REPLACING ==NAME== BY =="UUID"==.
        INITIALIZE NBTDEC
        MOVE 3 TO NBTDEC-OFFSET
        MOVE x"FFFF0B00000004000102030405060708090A0B0C0D0E0FFFFFFFFFFFFFFFFFFF" TO BUFFER
        MOVE ALL X"00" TO UUID
        CALL "NbtDecode-UUID" USING NBTDEC BUFFER UUID
        COPY TEST-ASSERT REPLACING COND BY ==NBTDEC-OFFSET = 24 AND UUID = X"000102030405060708090A0B0C0D0E0F"==.

        GOBACK.

    END PROGRAM Test-NbtDecode-UUID.

END PROGRAM Test-NbtDecode.
