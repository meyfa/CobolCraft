IDENTIFICATION DIVISION.
PROGRAM-ID. RecvPacket-SignUpdate.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CLIENTS.
    COPY DD-PLAYERS.
    01 PLAYER-ID                BINARY-LONG.
    01 STR                      PIC X(256).
    01 STRLEN                   BINARY-LONG.
    01 STRPOS                   BINARY-LONG.
    01 BLOCK-POSITION.
        02 BLOCK-X              BINARY-LONG.
        02 BLOCK-Y              BINARY-LONG.
        02 BLOCK-Z              BINARY-LONG.
    01 IS-FRONT-TEXT            BINARY-CHAR UNSIGNED.
    01 SIGN-LINES.
        COPY DD-SIGN-LINES REPLACING LEADING ==PREFIX== BY ==SIGN==.
    01 IDX                      BINARY-LONG UNSIGNED.
LINKAGE SECTION.
    01 LK-CLIENT                BINARY-LONG UNSIGNED.
    01 LK-BUFFER                PIC X ANY LENGTH.
    01 LK-OFFSET                BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-CLIENT LK-BUFFER LK-OFFSET.
    MOVE CLIENT-PLAYER(LK-CLIENT) TO PLAYER-ID

    CALL "Decode-Position" USING LK-BUFFER LK-OFFSET BLOCK-POSITION
    CALL "Decode-Byte" USING LK-BUFFER LK-OFFSET IS-FRONT-TEXT

    PERFORM VARYING IDX FROM 1 BY 1 UNTIL IDX > 4
        CALL "Decode-String" USING LK-BUFFER LK-OFFSET STRLEN STR
        *> Re-encode as JSON string
        MOVE 1 TO STRPOS
        CALL "JsonEncode-String" USING SIGN-LINE-STR(IDX) STRPOS STR STRLEN
        COMPUTE SIGN-LINE-LEN(IDX) = STRPOS - 1
    END-PERFORM

    *> Silently ignore serverbound update_sign without prior clientbound open_sign_editor
    IF PLAYER-UPDATE-SIGN-POSITION(PLAYER-ID) NOT = BLOCK-POSITION
        GOBACK
    END-IF

    CALL "BlockEntity-Sign-Update" USING BLOCK-POSITION IS-FRONT-TEXT SIGN-LINES

    INITIALIZE PLAYER-UPDATE-SIGN-POSITION(PLAYER-ID)

    GOBACK.

END PROGRAM RecvPacket-SignUpdate.
