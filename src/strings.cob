*> --- DecodeHexChar ---
*> Decode a single hex character to a byte value.
IDENTIFICATION DIVISION.
PROGRAM-ID. DecodeHexChar.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 NIBBLE-VALUE     PIC 9(3).
LINKAGE SECTION.
    01 LK-HEX-CHAR-IN   PIC X.
    01 LK-BYTE-OUT      PIC 9(3).

PROCEDURE DIVISION USING BY REFERENCE LK-HEX-CHAR-IN LK-BYTE-OUT.
    MOVE FUNCTION ORD(LK-HEX-CHAR-IN(1:1)) TO NIBBLE-VALUE
    EVALUATE TRUE
        WHEN NIBBLE-VALUE >= FUNCTION ORD("a")
            SUBTRACT FUNCTION ORD("a") FROM NIBBLE-VALUE
            ADD 10 TO NIBBLE-VALUE
        WHEN NIBBLE-VALUE >= FUNCTION ORD("A")
            SUBTRACT FUNCTION ORD("A") FROM NIBBLE-VALUE
            ADD 10 TO NIBBLE-VALUE
        WHEN OTHER
            SUBTRACT FUNCTION ORD("0") FROM NIBBLE-VALUE
    END-EVALUATE
    MOVE NIBBLE-VALUE TO LK-BYTE-OUT.

END PROGRAM DecodeHexChar.

*> --- DecodeHexString ---
*> Decode a hex string to a buffer. Spaces between pairs of hex characters are ignored.
IDENTIFICATION DIVISION.
PROGRAM-ID. DecodeHexString.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 INPUT-INDEX      PIC 9(5)        VALUE 1.
    01 CURRENT-CHAR     PIC X.
    01 NIBBLE-VALUE     PIC 9(3).
    01 BYTE-VALUE       PIC 9(3).
LINKAGE SECTION.
    01 LK-HEX-STRING-IN    PIC X(64000).
    01 LK-HEX-STRING-LEN   PIC 9(5).
    01 LK-BUFFER-OUT       PIC X(64000).
    01 LK-BYTES-WRITTEN    PIC 9(5).

PROCEDURE DIVISION USING BY REFERENCE LK-HEX-STRING-IN LK-HEX-STRING-LEN LK-BUFFER-OUT LK-BYTES-WRITTEN.
    MOVE 0 TO LK-BYTES-WRITTEN
    PERFORM UNTIL INPUT-INDEX > LK-HEX-STRING-LEN
        *> Skip spaces
        IF LK-HEX-STRING-IN(INPUT-INDEX:1) = " " THEN
            ADD 1 TO INPUT-INDEX
        ELSE
            *> Convert the current character to the upper part of the byte
            MOVE LK-HEX-STRING-IN(INPUT-INDEX:1) TO CURRENT-CHAR
            CALL "DecodeHexChar" USING CURRENT-CHAR NIBBLE-VALUE
            MULTIPLY NIBBLE-VALUE BY 16 GIVING BYTE-VALUE
            *> Convert the next character to the lower part of the byte
            ADD 1 TO INPUT-INDEX
            MOVE LK-HEX-STRING-IN(INPUT-INDEX:1) TO CURRENT-CHAR
            CALL "DecodeHexChar" USING CURRENT-CHAR NIBBLE-VALUE
            ADD NIBBLE-VALUE TO BYTE-VALUE
            *> Write the byte to the output buffer
            ADD 1 TO LK-BYTES-WRITTEN
            MOVE FUNCTION CHAR(BYTE-VALUE + 1) TO LK-BUFFER-OUT(LK-BYTES-WRITTEN:1)
            ADD 1 TO INPUT-INDEX
        END-IF
    END-PERFORM.

END PROGRAM DecodeHexString.

*> --- EncodeHexChar ---
*> Encode a nibble to a hex character.
IDENTIFICATION DIVISION.
PROGRAM-ID. EncodeHexChar.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 NIBBLE-VALUE     PIC 9(3).
LINKAGE SECTION.
    01 LK-NIBBLE-IN     PIC 9(3).
    01 LK-HEX-CHAR-OUT  PIC X.

PROCEDURE DIVISION USING BY REFERENCE LK-NIBBLE-IN LK-HEX-CHAR-OUT.
    MOVE LK-NIBBLE-IN TO NIBBLE-VALUE
    EVALUATE TRUE
        WHEN NIBBLE-VALUE < 10
            MOVE FUNCTION CHAR(NIBBLE-VALUE + FUNCTION ORD("0")) TO LK-HEX-CHAR-OUT
        WHEN OTHER
            MOVE FUNCTION CHAR(NIBBLE-VALUE - 10 + FUNCTION ORD("a")) TO LK-HEX-CHAR-OUT
    END-EVALUATE.

END PROGRAM EncodeHexChar.

*> --- EncodeHexString ---
*> Encode a buffer to a hex string.
IDENTIFICATION DIVISION.
PROGRAM-ID. EncodeHexString.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 BYTE-INDEX       PIC 9(5)        VALUE 1.
    01 STRING-INDEX     PIC 9(5)        VALUE 1.
    01 BYTE-VALUE       PIC 9(3).
    01 NIBBLE-VALUE     PIC 9(3).
    01 CURRENT-CHAR     PIC X.
LINKAGE SECTION.
    01 LK-BUFFER-IN       PIC X(64000).
    01 LK-BUFFER-LEN      PIC 9(5).
    01 LK-HEX-STRING-OUT  PIC X(64000).

PROCEDURE DIVISION USING BY REFERENCE LK-BUFFER-IN LK-BUFFER-LEN LK-HEX-STRING-OUT.
    PERFORM VARYING BYTE-INDEX FROM 1 BY 1 UNTIL BYTE-INDEX > LK-BUFFER-LEN
        COMPUTE BYTE-VALUE = FUNCTION ORD(LK-BUFFER-IN(BYTE-INDEX:1)) - 1
        DIVIDE BYTE-VALUE BY 16 GIVING NIBBLE-VALUE REMAINDER BYTE-VALUE
        CALL "EncodeHexChar" USING NIBBLE-VALUE CURRENT-CHAR
        MOVE CURRENT-CHAR TO LK-HEX-STRING-OUT(STRING-INDEX:1)
        ADD 1 TO STRING-INDEX
        CALL "EncodeHexChar" USING BYTE-VALUE CURRENT-CHAR
        MOVE CURRENT-CHAR TO LK-HEX-STRING-OUT(STRING-INDEX:1)
        ADD 1 TO STRING-INDEX
    END-PERFORM.

END PROGRAM EncodeHexString.
