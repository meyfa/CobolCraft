*> --- SendPacket-Commands ---
IDENTIFICATION DIVISION.
PROGRAM-ID. SendPacket-Commands.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 PACKET-ID                    BINARY-LONG             VALUE H'11'.
    *> buffer used to store the packet data
    01 PAYLOAD                      PIC X(160000).
    01 PAYLOADPOS                   BINARY-LONG UNSIGNED.
    01 PAYLOADLEN                   BINARY-LONG UNSIGNED.
    *> temporary data
    01 UINT8                        BINARY-CHAR UNSIGNED.
    01 INT32                        BINARY-LONG.
    01 NODE-INDEX                   INDEX.
    01 CHILD-INDEX                  INDEX.
LINKAGE SECTION.
    01 LK-CLIENT                    BINARY-LONG UNSIGNED.
    COPY DD-COMMAND-NODES REPLACING LEADING ==PREFIX== BY ==LK==.

PROCEDURE DIVISION USING LK-CLIENT LK-NODES.
    MOVE 1 TO PAYLOADPOS

    *> count
    CALL "Encode-VarInt" USING LK-NODE-COUNT PAYLOAD PAYLOADPOS

    *> nodes
    PERFORM VARYING NODE-INDEX FROM 1 BY 1 UNTIL NODE-INDEX > LK-NODE-COUNT
        *> flags
        MOVE LK-NODE-TYPE(NODE-INDEX) TO UINT8
        COMPUTE UINT8 = UINT8 + LK-NODE-EXECUTABLE(NODE-INDEX) * 4
        COMPUTE UINT8 = UINT8 + LK-NODE-HAS-REDIRECT(NODE-INDEX) * 8
        COMPUTE UINT8 = UINT8 + LK-NODE-HAS-SUGGESTIONS-TYPE(NODE-INDEX) * 16
        MOVE FUNCTION CHAR(UINT8 + 1) TO PAYLOAD(PAYLOADPOS:1)
        ADD 1 TO PAYLOADPOS

        *> child count
        CALL "Encode-VarInt" USING LK-NODE-CHILD-COUNT(NODE-INDEX) PAYLOAD PAYLOADPOS

        *> children
        PERFORM VARYING CHILD-INDEX FROM 1 BY 1 UNTIL CHILD-INDEX > LK-NODE-CHILD-COUNT(NODE-INDEX)
            CALL "Encode-VarInt" USING LK-NODE-CHILD-INDEX(NODE-INDEX, CHILD-INDEX) PAYLOAD PAYLOADPOS
        END-PERFORM

        *> redirect node
        IF LK-NODE-HAS-REDIRECT(NODE-INDEX) = 1
            CALL "Encode-VarInt" USING LK-NODE-REDIRECT-INDEX(NODE-INDEX) PAYLOAD PAYLOADPOS
        END-IF

        *> name (only for "literal" and "argument" nodes, types 1 and 2)
        IF LK-NODE-TYPE(NODE-INDEX) = 1 OR LK-NODE-TYPE(NODE-INDEX) = 2
            MOVE FUNCTION STORED-CHAR-LENGTH(LK-NODE-NAME(NODE-INDEX)) TO INT32
            CALL "Encode-String" USING LK-NODE-NAME(NODE-INDEX) INT32 PAYLOAD PAYLOADPOS
        END-IF

        *> only for "argument" nodes:
        IF LK-NODE-TYPE(NODE-INDEX) = 2
            *> parser
            CALL "Encode-VarInt" USING LK-NODE-PARSER(NODE-INDEX) PAYLOAD PAYLOADPOS

            *> properties
            MOVE LK-NODE-PROPERTIES-LENGTH(NODE-INDEX) TO INT32
            MOVE LK-NODE-PROPERTIES(NODE-INDEX)(1:INT32) TO PAYLOAD(PAYLOADPOS:INT32)
            ADD INT32 TO PAYLOADPOS
        END-IF

        *> suggestions type
        IF LK-NODE-HAS-SUGGESTIONS-TYPE(NODE-INDEX) = 1
            MOVE FUNCTION STORED-CHAR-LENGTH(LK-NODE-SUGGESTIONS-TYPE(NODE-INDEX)) TO INT32
            CALL "Encode-String" USING LK-NODE-SUGGESTIONS-TYPE(NODE-INDEX) INT32 PAYLOAD PAYLOADPOS
        END-IF
    END-PERFORM

    *> root index (always 0)
    MOVE 0 TO INT32
    CALL "Encode-VarInt" USING INT32 PAYLOAD PAYLOADPOS

    *> send packet
    COMPUTE PAYLOADLEN = PAYLOADPOS - 1
    CALL "SendPacket" USING LK-CLIENT PACKET-ID PAYLOAD PAYLOADLEN
    GOBACK.

END PROGRAM SendPacket-Commands.
