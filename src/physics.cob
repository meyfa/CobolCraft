*> --- CheckCollisionAABB ---
*> Check for collision between two axis-aligned bounding boxes.
IDENTIFICATION DIVISION.
PROGRAM-ID. CheckCollisionAABB.

DATA DIVISION.
LINKAGE SECTION.
    COPY DD-AABB REPLACING LEADING ==PREFIX-== BY ==LK-FIRST-==.
    COPY DD-AABB REPLACING LEADING ==PREFIX-== BY ==LK-SECOND-==.
    01 LK-COLLISION             BINARY-CHAR UNSIGNED.

PROCEDURE DIVISION USING LK-FIRST-AABB LK-SECOND-AABB LK-COLLISION.
    IF LK-FIRST-AABB-MIN-X > LK-SECOND-AABB-MAX-X OR LK-FIRST-AABB-MAX-X < LK-SECOND-AABB-MIN-X
            OR LK-FIRST-AABB-MIN-Y > LK-SECOND-AABB-MAX-Y OR LK-FIRST-AABB-MAX-Y < LK-SECOND-AABB-MIN-Y
            OR LK-FIRST-AABB-MIN-Z > LK-SECOND-AABB-MAX-Z OR LK-FIRST-AABB-MAX-Z < LK-SECOND-AABB-MIN-Z
        MOVE 0 TO LK-COLLISION
        GOBACK
    END-IF
    MOVE 1 TO LK-COLLISION
    GOBACK.

END PROGRAM CheckCollisionAABB.

*> --- PlayerAABB ---
*> Get the axis-aligned bounding box for a player.
IDENTIFICATION DIVISION.
PROGRAM-ID. PlayerAABB.

DATA DIVISION.
WORKING-STORAGE SECTION.
    *> Allow for some extra space around the player for collision detection.
    78 EPSILON                      VALUE 0.00001.
LINKAGE SECTION.
    01 LK-POSITION.
        02 LK-X                     FLOAT-LONG.
        02 LK-Y                     FLOAT-LONG.
        02 LK-Z                     FLOAT-LONG.
    01 LK-SNEAKING                  BINARY-CHAR UNSIGNED.
    COPY DD-AABB REPLACING LEADING ==PREFIX-== BY ==LK-==.

PROCEDURE DIVISION USING LK-POSITION LK-SNEAKING LK-AABB.
    COMPUTE LK-AABB-MIN-X = LK-X - 0.3 + EPSILON
    COMPUTE LK-AABB-MIN-Y = LK-Y + EPSILON
    COMPUTE LK-AABB-MIN-Z = LK-Z - 0.3 + EPSILON
    COMPUTE LK-AABB-MAX-X = LK-X + 0.3 - EPSILON
    COMPUTE LK-AABB-MAX-Z = LK-Z + 0.3 - EPSILON
    EVALUATE LK-SNEAKING
        WHEN 0
            COMPUTE LK-AABB-MAX-Y = LK-Y + 1.8 - EPSILON
        WHEN OTHER
            COMPUTE LK-AABB-MAX-Y = LK-Y + 1.5 - EPSILON
    END-EVALUATE
    GOBACK.

END PROGRAM PlayerAABB.

*> --- CheckPlayerCollision ---
*> Check a bounding box against all player bounding boxes.
IDENTIFICATION DIVISION.
PROGRAM-ID. CheckPlayerCollision.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-PLAYERS.
    COPY DD-SERVER-PROPERTIES.
    COPY DD-AABB REPLACING LEADING ==PREFIX-== BY ==PLAYER-==.
    01 PLAYER-ID                    BINARY-LONG UNSIGNED.
LINKAGE SECTION.
    COPY DD-AABB REPLACING LEADING ==PREFIX-== BY ==LK-==.
    01 LK-COLLISION                 BINARY-CHAR UNSIGNED.

PROCEDURE DIVISION USING LK-AABB LK-COLLISION.
    PERFORM VARYING PLAYER-ID FROM 1 BY 1 UNTIL PLAYER-ID > MAX-PLAYERS
        IF PLAYER-CLIENT(PLAYER-ID) NOT = 0
            CALL "PlayerAABB" USING PLAYER-POSITION(PLAYER-ID) PLAYER-SNEAKING(PLAYER-ID) PLAYER-AABB
            CALL "CheckCollisionAABB" USING LK-AABB PLAYER-AABB LK-COLLISION
            IF LK-COLLISION NOT = 0
                GOBACK
            END-IF
        END-IF
    END-PERFORM
    MOVE 0 TO LK-COLLISION
    GOBACK.

END PROGRAM CheckPlayerCollision.
