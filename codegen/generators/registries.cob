*> --- CG-Registries ---
IDENTIFICATION DIVISION.
PROGRAM-ID. CG-Registries.

DATA DIVISION.
WORKING-STORAGE SECTION.
    *> output buffer
    01 BUFFER                       PIC X(1000000).
    01 BUFFERLEN                    BINARY-LONG UNSIGNED.
    *> template
    01 REPLACE-PTR                  PROGRAM-POINTER.
    COPY DD-CODEGEN-TEMPLATE REPLACING LEADING ==PREFIX== BY ==MAIN==.

PROCEDURE DIVISION.
    SET REPLACE-PTR TO ENTRY "CG-Registries-Main"
    CALL "Codegen-TemplateLoad" USING "registries/main.tpl.cob" REPLACE-PTR MAIN-TPL

    CALL "Codegen-Start" USING "registries.cob"

    MOVE 0 TO BUFFERLEN
    CALL "Codegen-TemplateEval" USING MAIN-TPL BUFFER BUFFERLEN
    CALL "Codegen-Append" USING BUFFER(1:BUFFERLEN)

    CALL "Codegen-End"

    GOBACK.

END PROGRAM CG-Registries.

*> --- CG-Registries-Main ---
IDENTIFICATION DIVISION.
PROGRAM-ID. CG-Registries-Main.

DATA DIVISION.
WORKING-STORAGE SECTION.
    *> initialized once
    01 INIT-DONE                    BINARY-CHAR UNSIGNED.
    01 REPLACE-PTR                  PROGRAM-POINTER.
    COPY DD-CODEGEN-TEMPLATE REPLACING LEADING ==PREFIX== BY ==REGISTRY==.
    *> shared state
    COPY DD-REGISTRIES.
    01 REGISTRY-INDEX               BINARY-LONG UNSIGNED        EXTERNAL.
LINKAGE SECTION.
    01 LK-VARNAME                   PIC X ANY LENGTH.
    01 LK-BUFFER                    PIC X ANY LENGTH.
    01 LK-LENGTH                    BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-VARNAME LK-BUFFER LK-LENGTH.
    IF INIT-DONE = 0
        SET REPLACE-PTR TO ENTRY "CG-Registries-Registry"
        CALL "Codegen-TemplateLoad" USING "registries/registry.tpl.cob" REPLACE-PTR REGISTRY-TPL
        MOVE 1 TO INIT-DONE
    END-IF

    EVALUATE LK-VARNAME
        WHEN "registry-count"
            CALL "Codegen-WriteInt" USING REGISTRY-COUNT LK-BUFFER LK-LENGTH

        WHEN "registrations"
            PERFORM VARYING REGISTRY-INDEX FROM 1 BY 1 UNTIL REGISTRY-INDEX > REGISTRY-COUNT
                CALL "Codegen-TemplateEval" USING REGISTRY-TPL LK-BUFFER LK-LENGTH
            END-PERFORM
    END-EVALUATE

    GOBACK.

END PROGRAM CG-Registries-Main.

*> --- CG-Registries-Registry ---
IDENTIFICATION DIVISION.
PROGRAM-ID. CG-Registries-Registry.

DATA DIVISION.
WORKING-STORAGE SECTION.
    *> initialized once
    01 INIT-DONE                    BINARY-CHAR UNSIGNED.
    01 REPLACE-PTR                  PROGRAM-POINTER.
    COPY DD-CODEGEN-TEMPLATE REPLACING LEADING ==PREFIX== BY ==ENTRY==.
    *> shared state
    COPY DD-REGISTRIES.
    01 REGISTRY-INDEX               BINARY-LONG UNSIGNED        EXTERNAL.
    01 REGISTRY-ENTRY-INDEX         BINARY-LONG UNSIGNED        EXTERNAL.
LINKAGE SECTION.
    01 LK-VARNAME                   PIC X ANY LENGTH.
    01 LK-BUFFER                    PIC X ANY LENGTH.
    01 LK-LENGTH                    BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-VARNAME LK-BUFFER LK-LENGTH.
    IF INIT-DONE = 0
        SET REPLACE-PTR TO ENTRY "CG-Registries-Entry"
        CALL "Codegen-TemplateLoad" USING "registries/entry.tpl.cob" REPLACE-PTR ENTRY-TPL
        MOVE 1 TO INIT-DONE
    END-IF

    EVALUATE LK-VARNAME
        WHEN "registry-index"
            CALL "Codegen-WriteInt" USING REGISTRY-INDEX LK-BUFFER LK-LENGTH

        WHEN "registry-name"
            STRING FUNCTION TRIM(REGISTRY-NAME(REGISTRY-INDEX)) INTO LK-BUFFER(LK-LENGTH + 1:)
            ADD FUNCTION STORED-CHAR-LENGTH(REGISTRY-NAME(REGISTRY-INDEX)) TO LK-LENGTH

        WHEN "registry-length"
            CALL "Codegen-WriteInt" USING REGISTRY-ENTRY-COUNT(REGISTRY-INDEX) LK-BUFFER LK-LENGTH

        WHEN "body"
            PERFORM VARYING REGISTRY-ENTRY-INDEX FROM 1 BY 1 UNTIL REGISTRY-ENTRY-INDEX > REGISTRY-ENTRY-COUNT(REGISTRY-INDEX)
                CALL "Codegen-TemplateEval" USING ENTRY-TPL LK-BUFFER LK-LENGTH
            END-PERFORM
    END-EVALUATE

    GOBACK.

END PROGRAM CG-Registries-Registry.

*> --- CG-Registries-Entry ---
IDENTIFICATION DIVISION.
PROGRAM-ID. CG-Registries-Entry.

DATA DIVISION.
WORKING-STORAGE SECTION.
    *> shared state
    COPY DD-REGISTRIES.
    01 REGISTRY-INDEX               BINARY-LONG UNSIGNED        EXTERNAL.
    01 REGISTRY-ENTRY-INDEX         BINARY-LONG UNSIGNED        EXTERNAL.
LINKAGE SECTION.
    01 LK-VARNAME                   PIC X ANY LENGTH.
    01 LK-BUFFER                    PIC X ANY LENGTH.
    01 LK-LENGTH                    BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-VARNAME LK-BUFFER LK-LENGTH.
    EVALUATE LK-VARNAME
        WHEN "registry-index"
            CALL "Codegen-WriteInt" USING REGISTRY-INDEX LK-BUFFER LK-LENGTH

        WHEN "entry-index"
            CALL "Codegen-WriteInt" USING REGISTRY-ENTRY-INDEX LK-BUFFER LK-LENGTH

        WHEN "entry-name"
            STRING FUNCTION TRIM(REGISTRY-ENTRY-NAME(REGISTRY-INDEX, REGISTRY-ENTRY-INDEX)) INTO LK-BUFFER(LK-LENGTH + 1:)
            ADD FUNCTION STORED-CHAR-LENGTH(REGISTRY-ENTRY-NAME(REGISTRY-INDEX, REGISTRY-ENTRY-INDEX)) TO LK-LENGTH
    END-EVALUATE

    GOBACK.

END PROGRAM CG-Registries-Entry.
