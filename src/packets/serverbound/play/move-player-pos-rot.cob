IDENTIFICATION DIVISION.
PROGRAM-ID. RecvPacket-MovePlayerPosRot.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CLIENTS.
    COPY DD-PLAYERS.
    01 PLAYER-ID                BINARY-LONG.
LINKAGE SECTION.
    01 LK-CLIENT                BINARY-LONG UNSIGNED.
    01 LK-BUFFER                PIC X ANY LENGTH.
    01 LK-OFFSET                BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-CLIENT LK-BUFFER LK-OFFSET.
    MOVE CLIENT-PLAYER(LK-CLIENT) TO PLAYER-ID

    *> ignore movement until position is confirmed
    IF TELEPORT-RECV(LK-CLIENT) NOT = TELEPORT-SENT(LK-CLIENT)
        GOBACK
    END-IF

    CALL "Decode-Double" USING LK-BUFFER LK-OFFSET PLAYER-X(PLAYER-ID)
    CALL "Decode-Double" USING LK-BUFFER LK-OFFSET PLAYER-Y(PLAYER-ID)
    CALL "Decode-Double" USING LK-BUFFER LK-OFFSET PLAYER-Z(PLAYER-ID)
    CALL "Decode-Float" USING LK-BUFFER LK-OFFSET PLAYER-YAW(PLAYER-ID)
    CALL "Decode-Float" USING LK-BUFFER LK-OFFSET PLAYER-PITCH(PLAYER-ID)
    *> TODO: "on ground" flag

    GOBACK.

END PROGRAM RecvPacket-MovePlayerPosRot.
