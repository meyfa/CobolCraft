*> Note: This implementation is only for plugin messages during the "configuration" phase.
*> Other phases use different packet IDs.
IDENTIFICATION DIVISION.
PROGRAM-ID. SendPacket-PluginMessage.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 PACKET-ID        BINARY-LONG             VALUE H'01'.
    *> buffer used to store the packet data
    01 PAYLOAD          PIC X(64000).
    01 PAYLOADLEN       BINARY-LONG UNSIGNED.
    *> temporary
    01 CHANNEL-LEN      BINARY-LONG UNSIGNED.
    01 BUFFER           PIC X(8).
    01 BUFFERLEN        BINARY-LONG UNSIGNED.
LINKAGE SECTION.
    01 LK-HNDL          PIC X(4).
    01 LK-ERRNO         PIC 9(3).
    01 LK-CHANNEL       PIC X ANY LENGTH.
    01 LK-DATA-LEN      BINARY-LONG UNSIGNED.
    01 LK-DATA          PIC X ANY LENGTH.

PROCEDURE DIVISION USING LK-HNDL LK-ERRNO LK-CHANNEL LK-DATA-LEN LK-DATA.
    MOVE 0 TO PAYLOADLEN

    *> channel length
    MOVE FUNCTION STORED-CHAR-LENGTH(LK-CHANNEL) TO CHANNEL-LEN
    CALL "Encode-VarInt" USING CHANNEL-LEN BUFFER BUFFERLEN
    MOVE BUFFER TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> channel
    MOVE LK-CHANNEL(1:CHANNEL-LEN) TO PAYLOAD(PAYLOADLEN + 1:CHANNEL-LEN)
    ADD CHANNEL-LEN TO PAYLOADLEN

    *> data
    MOVE LK-DATA(1:LK-DATA-LEN) TO PAYLOAD(PAYLOADLEN + 1:LK-DATA-LEN)
    ADD LK-DATA-LEN TO PAYLOADLEN

    *> send packet
    CALL "SendPacket" USING LK-HNDL PACKET-ID PAYLOAD PAYLOADLEN LK-ERRNO
    GOBACK.

END PROGRAM SendPacket-PluginMessage.
