IDENTIFICATION DIVISION.
PROGRAM-ID. RecvPacket-Intention.

DATA DIVISION.
WORKING-STORAGE SECTION.
    COPY DD-CLIENTS.
    COPY DD-CLIENT-STATES.
    *> payload
    01 PROTOCOL-VERSION         BINARY-LONG.
    01 SERVER-ADDRESS           PIC X(255).
    01 SERVER-ADDRESS-LENGTH    BINARY-LONG.
    01 SERVER-PORT              BINARY-SHORT UNSIGNED.
    01 NEXT-STATE               BINARY-LONG.
LINKAGE SECTION.
    01 LK-CLIENT                BINARY-LONG UNSIGNED.
    01 LK-BUFFER                PIC X ANY LENGTH.
    01 LK-OFFSET                BINARY-LONG UNSIGNED.

PROCEDURE DIVISION USING LK-CLIENT LK-BUFFER LK-OFFSET.
    *> TODO check the protocol version
    CALL "Decode-VarInt" USING LK-BUFFER LK-OFFSET PROTOCOL-VERSION
    CALL "Decode-String" USING LK-BUFFER LK-OFFSET SERVER-ADDRESS SERVER-ADDRESS-LENGTH
    CALL "Decode-Short" USING LK-BUFFER LK-OFFSET SERVER-PORT
    CALL "Decode-VarInt" USING LK-BUFFER LK-OFFSET NEXT-STATE

    IF NOT (NEXT-STATE = CLIENT-STATE-STATUS OR CLIENT-STATE-LOGIN)
        DISPLAY "Client requested invalid target state: " NEXT-STATE
        CALL "Server-DisconnectClient" USING LK-CLIENT
    END-IF

    MOVE NEXT-STATE TO CLIENT-STATE(LK-CLIENT)

    GOBACK.

END PROGRAM RecvPacket-Intention.
