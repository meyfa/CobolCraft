*> --- Decode-VarInt ---
*> Decode a VarInt from a buffer into a 32-bit integer (BINARY-LONG).
IDENTIFICATION DIVISION.
PROGRAM-ID. Decode-VarInt.

DATA DIVISION.
LOCAL-STORAGE SECTION.
    01 VARINT-READ-COUNT    BINARY-CHAR UNSIGNED    VALUE 0.
    01 VARINT-BYTE          BINARY-CHAR UNSIGNED    VALUE 0.
    01 VARINT-BYTE-VALUE    BINARY-CHAR UNSIGNED    VALUE 0.
    01 VARINT-MULTIPLIER    BINARY-LONG UNSIGNED    VALUE 1.
    01 VARINT-CONTINUE      BINARY-CHAR UNSIGNED    VALUE 1.
    01 UINT-VALUE           BINARY-LONG UNSIGNED    VALUE 0.
LINKAGE SECTION.
    01 LK-BUFFER            PIC X(2100000).
    01 LK-BUFFERPOS         BINARY-LONG UNSIGNED.
    01 LK-VALUE             BINARY-LONG.

PROCEDURE DIVISION USING BY REFERENCE LK-BUFFER LK-BUFFERPOS LK-VALUE.
    PERFORM UNTIL VARINT-CONTINUE = 0
        *> Read the next byte
        COMPUTE VARINT-BYTE = FUNCTION ORD(LK-BUFFER(LK-BUFFERPOS:1)) - 1
        ADD 1 TO LK-BUFFERPOS
        ADD 1 TO VARINT-READ-COUNT
        *> Extract the lower 7 bits
        MOVE FUNCTION MOD(VARINT-BYTE, 128) TO VARINT-BYTE-VALUE
        *> This yields the value when multiplied by the position multiplier
        MULTIPLY VARINT-BYTE-VALUE BY VARINT-MULTIPLIER GIVING VARINT-BYTE-VALUE
        ADD VARINT-BYTE-VALUE TO UINT-VALUE
        MULTIPLY VARINT-MULTIPLIER BY 128 GIVING VARINT-MULTIPLIER
        *> Check if we need to continue (if the high bit is set and the maximum number of bytes has not been reached)
        IF VARINT-BYTE < 128 OR VARINT-READ-COUNT >= 5
            MOVE 0 TO VARINT-CONTINUE
        END-IF
    END-PERFORM
    *> Check if the number is negative (i.e., larger than 2^31-1) and compute the two's complement (2^32 - value)
    IF UINT-VALUE > 2147483647
        COMPUTE LK-VALUE = 4294967296 - UINT-VALUE
    ELSE
        MOVE UINT-VALUE TO LK-VALUE
    END-IF
    GOBACK.

END PROGRAM Decode-VarInt.

*> --- Decode-String ---
*> Decode a string from a buffer. The string is prefixed with a VarInt length.
IDENTIFICATION DIVISION.
PROGRAM-ID. Decode-String.

DATA DIVISION.
LINKAGE SECTION.
    01 LK-BUFFER            PIC X(2100000).
    01 LK-BUFFERPOS         BINARY-LONG UNSIGNED.
    01 LK-STR-LENGTH        BINARY-LONG.
    01 LK-VALUE             PIC X(64000).

PROCEDURE DIVISION USING BY REFERENCE LK-BUFFER LK-BUFFERPOS LK-STR-LENGTH LK-VALUE.
    *> Read the length
    CALL "Decode-VarInt" USING LK-BUFFER LK-BUFFERPOS LK-STR-LENGTH
    IF LK-STR-LENGTH < 0 OR LK-STR-LENGTH > 64000
        *> TODO: Handle error
        EXIT PROGRAM
    END-IF
    *> Read the string
    MOVE LK-BUFFER(LK-BUFFERPOS:LK-STR-LENGTH) TO LK-VALUE(1:LK-STR-LENGTH)
    ADD LK-STR-LENGTH TO LK-BUFFERPOS
    GOBACK.

END PROGRAM Decode-String.
