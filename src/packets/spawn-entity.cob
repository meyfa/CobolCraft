IDENTIFICATION DIVISION.
PROGRAM-ID. SendPacket-SpawnEntity.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 PACKET-ID        BINARY-LONG             VALUE 1.
    *> buffer used to store the packet data
    01 PAYLOAD          PIC X(1024).
    01 PAYLOADLEN       BINARY-LONG UNSIGNED.
    *> temporary data
    01 INT32            BINARY-LONG.
    01 BUFFER           PIC X(16).
    01 BUFFERLEN        BINARY-LONG UNSIGNED.
    *> registry data (cached on first use)
    01 PLAYER-TYPE      BINARY-LONG             VALUE -1.
    *> constants
    01 C-ENTITY_TYPE    PIC X(64)               VALUE "minecraft:entity_type".
    01 C-PLAYER         PIC X(64)               VALUE "minecraft:player".
LINKAGE SECTION.
    01 LK-HNDL          PIC X(4).
    01 LK-ERRNO         PIC 9(3).
    01 LK-ENTITY-ID     BINARY-LONG.
    01 LK-ENTITY-UUID   PIC X(16).
    *> TODO: support entity types other than player
    *> 01 LK-TYPE          BINARY-LONG.
    01 LK-POSITION.
        02 LK-X         FLOAT-LONG.
        02 LK-Y         FLOAT-LONG.
        02 LK-Z         FLOAT-LONG.
    01 LK-ROTATION.
        02 LK-YAW       FLOAT-SHORT.
        02 LK-PITCH     FLOAT-SHORT.

PROCEDURE DIVISION USING BY REFERENCE LK-HNDL LK-ERRNO LK-ENTITY-ID LK-ENTITY-UUID LK-POSITION LK-ROTATION.
    *> obtain and cache ID of player entity type
    IF PLAYER-TYPE < 0
        CALL "Registries-Get-EntryId" USING C-ENTITY_TYPE C-PLAYER PLAYER-TYPE
    END-IF

    MOVE 0 TO PAYLOADLEN

    *> entity ID
    CALL "Encode-VarInt" USING LK-ENTITY-ID BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> entity UUID
    MOVE LK-ENTITY-UUID(1:16) TO PAYLOAD(PAYLOADLEN + 1:16)
    ADD 16 TO PAYLOADLEN

    *> entity type
    CALL "Encode-VarInt" USING PLAYER-TYPE BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> entity position
    CALL "Encode-Double" USING LK-X BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN
    CALL "Encode-Double" USING LK-Y BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN
    CALL "Encode-Double" USING LK-Z BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> entity rotation
    CALL "Encode-Angle" USING LK-YAW BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN
    CALL "Encode-Angle" USING LK-PITCH BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> head yaw
    *> TODO: implement as a separate field
    CALL "Encode-Angle" USING LK-YAW BUFFER BUFFERLEN
    MOVE BUFFER(1:BUFFERLEN) TO PAYLOAD(PAYLOADLEN + 1:BUFFERLEN)
    ADD BUFFERLEN TO PAYLOADLEN

    *> data=0
    MOVE X"00" TO PAYLOAD(PAYLOADLEN + 1:1)
    ADD 1 TO PAYLOADLEN

    *> velocity X/Y/Z
    MOVE X"000000000000" TO PAYLOAD(PAYLOADLEN + 1:6)
    ADD 6 TO PAYLOADLEN

    *> send packet
    CALL "SendPacket" USING LK-HNDL PACKET-ID PAYLOAD PAYLOADLEN LK-ERRNO
    GOBACK.

END PROGRAM SendPacket-SpawnEntity.
