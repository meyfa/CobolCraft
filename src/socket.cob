*> --- Socket-Listen ---
IDENTIFICATION DIVISION.
PROGRAM-ID. Socket-Listen.

DATA DIVISION.
LINKAGE SECTION.
    01 LK-PORT          PIC X(5).
    01 LK-LISTEN        PIC X(4).
    01 LK-ERRNO         PIC 9(3).

PROCEDURE DIVISION USING BY REFERENCE LK-PORT LK-LISTEN LK-ERRNO.
    CALL "CBL_GC_SOCKET" USING "00" LK-PORT LK-LISTEN GIVING LK-ERRNO.

END PROGRAM Socket-Listen.

*> --- Socket-Accept ---
IDENTIFICATION DIVISION.
PROGRAM-ID. Socket-Accept.

DATA DIVISION.
LINKAGE SECTION.
    01 LK-LISTEN        PIC X(4).
    01 LK-HNDL          PIC X(4).
    01 LK-ERRNO         PIC 9(3).

PROCEDURE DIVISION USING BY REFERENCE LK-LISTEN LK-HNDL LK-ERRNO.
    CALL "CBL_GC_SOCKET" USING "07" LK-LISTEN LK-HNDL GIVING LK-ERRNO.

END PROGRAM Socket-Accept.

*> --- Socket-Close ---
IDENTIFICATION DIVISION.
PROGRAM-ID. Socket-Close.

DATA DIVISION.
LINKAGE SECTION.
    01 LK-HNDL          PIC X(4).
    01 LK-ERRNO         PIC 9(3).

PROCEDURE DIVISION USING BY REFERENCE LK-HNDL LK-ERRNO.
    CALL "CBL_GC_SOCKET" USING "06" LK-HNDL GIVING LK-ERRNO.

END PROGRAM Socket-Close.

*> --- Socket-Read ---
*> Read a raw byte array from the socket. The number of bytes to read can be arbitrarily large.
IDENTIFICATION DIVISION.
PROGRAM-ID. Socket-Read.

DATA DIVISION.
WORKING-STORAGE SECTION.
    01 CHUNK-BUFFER         PIC X(64000).
LOCAL-STORAGE SECTION.
    01 BYTES-READ           PIC 9(10)   VALUE 0.
    01 REMAINING            PIC 9(10)   VALUE 0.
    01 CHUNK-SIZE           PIC 9(5)    VALUE 0.
LINKAGE SECTION.
    01 LK-HNDL              PIC X(4).
    01 LK-ERRNO             PIC 9(3).
    01 LK-READ-COUNT        PIC 9(10).
    01 LK-BUFFER            PIC X(2100000).

PROCEDURE DIVISION USING BY REFERENCE LK-HNDL LK-ERRNO LK-READ-COUNT LK-BUFFER.
    IF LK-READ-COUNT < 1 OR LK-READ-COUNT > 2100000
        MOVE 1 TO LK-ERRNO
        EXIT PROGRAM
    END-IF

    *> If the number of bytes to read is at most 64000, we can read it all at once
    IF LK-READ-COUNT <= 64000
        MOVE LK-READ-COUNT TO CHUNK-SIZE
        CALL "CBL_GC_SOCKET" USING "04" LK-HNDL CHUNK-SIZE LK-BUFFER GIVING LK-ERRNO
        GOBACK
    END-IF

    *> Read in chunks of up to 64000 bytes
    PERFORM UNTIL BYTES-READ >= LK-READ-COUNT
        COMPUTE REMAINING = LK-READ-COUNT - BYTES-READ
        COMPUTE CHUNK-SIZE = FUNCTION MIN(64000, REMAINING)
        CALL "CBL_GC_SOCKET" USING "04" LK-HNDL CHUNK-SIZE CHUNK-BUFFER GIVING LK-ERRNO
        IF LK-ERRNO NOT = 0
            EXIT PERFORM
        END-IF
        MOVE CHUNK-BUFFER(1:CHUNK-SIZE) TO LK-BUFFER(BYTES-READ + 1:CHUNK-SIZE)
        ADD CHUNK-SIZE TO BYTES-READ
    END-PERFORM

    GOBACK.

END PROGRAM Socket-Read.
